def bubblesort1(a):
    n = len(a)
    for i in range(n-1):
        #there are two for loops bc it would just move the max to the right
        for j in range(0,n-i-1): #we put -i so its more efficient
            if a[j]>a[j+1]: #we can switch the ><
                a[j], a[j+1] = a[j+1],a[j]
    return (a)
"""
 First loop iterates through every item in our array. 
 Then, we use another for loop to compare all the items in our array with each other.
"""



# we can extend it by checking whthe its completed by putting in if statement
# time complexity O(n**2)
# the best time complexity is O(n) bc we still need to go thru the list thats why O(1) would be useless
def bubblesort2(a):
    n = len(a)
    complete = False
    for i in range(n-1):
        if complete == False:
            complete == True
            for j in range(0,n-i-1):
                if a[j]>a[j+1]:
                    a[j], a[j+1] = a[j+1],a[j]
                complete == False
                #if it doesnt get to this line, then there were no changes and it doesnt need any more swapping
        else:
            break
    return (a)

print(bubblesort2(a))
